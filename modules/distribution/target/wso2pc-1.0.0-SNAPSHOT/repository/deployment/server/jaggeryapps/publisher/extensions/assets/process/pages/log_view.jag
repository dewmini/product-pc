<%
var caramel;
require('/modules/publisher.js').exec(function(ctx) {
    caramel = require('caramel');
    var ui = require('rxt').ui;
    var asset = require('rxt').asset;
    var uriMatcher = new URIMatcher(ctx.request.getRequestURI());
    var options = uriMatcher.match('/{context}/assets/{type}/{pageName}/{+id}')||uriMatcher.match('/{context}/assets/{type}/{pageName}');

    var log = new Log();

    var timeToDateStr = function(time) {
        var date = new Date(time);
        return date;
    };

    var LogActivity = function(id,author,action,type,time){
        this.id = id;
        this.author = author;
        this.action = action;
        this.type = type;
        this.time = time;
        this.dateStr = timeToDateStr(time);
    };

    var compare = function compare(a,b) {
        if (a.time <= b.time)
            return -1;
        else if (a.time > b.time)
            return 1;
        else
            return 0;
    };

    var rxt = require('rxt');
    var logArr = [];

    //call for registry log access
    importPackage(org.wso2.carbon.pc.core.audit);

    var logAccess = function (assets) {

        var url = 'https://localhost:9443/publisher/assets/process/apis/audit_log';
        //       var result = post(url, 'Jaggery HTTP POST', {
        //           "User-Agent" : "Jaggery-XHR",
        //           "path" : "LK"
        //       }, 'json');
        //       log.info(result);

        var xhr = new XMLHttpRequest();
        xhr.open("POST", url);
        xhr.setRequestHeader("path" , "path");
        xhr.send();

    };

    if(!options){
        response.sendError(400,'Could not locate an endpoint for your request.Make sure that you provide an id');
    } else {
        var type = options.type;
        var am = asset.createUserAssetManager(session, type);
        var page = ui.buildPage(session, request);
        var assets;
        if(options.id!= null) {
            assets = am.get(options.id);
            logAccess(assets);
        } else {
            var assetApi = require('/modules/asset-api.js').api;
            assets = assetApi.advanceSearch(options,ctx.request,ctx.response,ctx.session)||[];
            logAccess(assets);
        }
        if (assets == null) {
            response.sendError(404, 'The asset with id: ' + options.id + ' could not be located.');
        } else {
            logArr.sort(compare);
            page.auditlog = logArr;
            var output;
            if(options.id != null){
                output = am.render(assets, page).details();
            } else {
                output = am.render(assets, page).list();
            }
            caramel.render(output);
        }
    }
}, request, response, session);
%>